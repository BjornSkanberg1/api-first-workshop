apiVersion: v1
kind: ConfigMap
metadata:
  name: tc-configs
  namespace: swag-infra
data:
  tc-config.xml: |
      <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
      <!--
        Copyright (c) 2011-2018 Software AG, Darmstadt, Germany and/or Software AG USA Inc., Reston, VA, USA, and/or its subsidiaries and/or its affiliates and/or their licensors.
        Use, reproduction, transfer, publication or disclosure is prohibited except as specifically provided for in your License Agreement with Software AG.
        -->
      <tc-config xmlns="http://www.terracotta.org/config">
        <plugins>
          <service>
            <lease:connection-leasing xmlns:backup="http://www.terracottatech.com/config/backup-restore" xmlns:data="http://www.terracottatech.com/config/data-roots" xmlns:ohr="http://www.terracotta.org/config/offheap-resource" xmlns:lease="http://www.terracotta.org/service/lease">
              <lease:lease-length unit="seconds">20</lease:lease-length>
            </lease:connection-leasing>
          </service>
          <config>
            <ohr:offheap-resources xmlns:backup="http://www.terracottatech.com/config/backup-restore" xmlns:data="http://www.terracottatech.com/config/data-roots" xmlns:ohr="http://www.terracotta.org/config/offheap-resource" xmlns:lease="http://www.terracotta.org/service/lease">
              <ohr:resource name="offheap-1" unit="GB">1</ohr:resource>
              <ohr:resource name="offheap-2" unit="GB">1</ohr:resource>
            </ohr:offheap-resources>
          </config>
          <config>
            <data:data-directories xmlns:backup="http://www.terracottatech.com/config/backup-restore" xmlns:data="http://www.terracottatech.com/config/data-roots" xmlns:ohr="http://www.terracotta.org/config/offheap-resource" xmlns:lease="http://www.terracotta.org/service/lease">
              <data:directory name="PLATFORM" use-for-platform="true">/data/dataroots/platform</data:directory>
              <data:directory name="dataroot-1" use-for-platform="false">/data/dataroots/dataroot-1</data:directory>
              <data:directory name="dataroot-2" use-for-platform="false">/data/dataroots/dataroot-2</data:directory>
            </data:data-directories>
          </config>
          <service>
            <backup:backup-restore xmlns:backup="http://www.terracottatech.com/config/backup-restore" xmlns:data="http://www.terracottatech.com/config/data-roots" xmlns:ohr="http://www.terracotta.org/config/offheap-resource" xmlns:lease="http://www.terracotta.org/service/lease">
              <backup:backup-location path="/data/backups"/>
            </backup:backup-restore>
          </service>
        </plugins>
        <servers>
          <server host="terracotta-0.swag-infra" name="terracotta-0" bind="0.0.0.0">
            <logs>/opt/softwareag/terracotta/server/conf/stdout:</logs>
            <tsa-port bind="0.0.0.0">9410</tsa-port>
            <tsa-group-port bind="0.0.0.0">9430</tsa-group-port>
          </server>
          <client-reconnect-window>120</client-reconnect-window>
        </servers>
      </tc-config>
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tc-data-pv
  namespace: swag-infra
spec:
  storageClassName: longhorn
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: terracotta-0
  namespace: swag-infra
  labels:
    app: terracotta
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
  - name: terracotta-port
    port: 9410
  - name: sync-port
    port: 9430
  clusterIP: None
  selector:
    app: terracotta

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: terracotta
  name: terracotta
  namespace: swag-infra
spec:
  selector:
    matchLabels:
      app: terracotta
  serviceName: terracotta-0
  # replica set definition
  replicas: 1
  template:
    metadata:
      labels:
        app: terracotta
    spec:
    # pod definition
      containers:
      - name: terracotta
        image: store/softwareag/terracotta-server:10.5
        imagePullPolicy: Always #ensure the node will always try to pull from the registry
        resources:
          requests:
            memory: 2Gi
        command: ["bin/start-tc-server.sh"]
        args: ["-f", "/configs/tc-config.xml", "-n", "$(POD_NAME)"]
        ports:
        - containerPort: 9410
          name: terracotta-port
        - containerPort: 9430
          name: sync-port
        env:
        - name: ACCEPT_EULA
          value: "Y"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: dataroots
          mountPath: /data/dataroots
        - name: config-volume
          mountPath: /configs
      volumes:
      - name: config-volume
        configMap:
          name: tc-configs
      - name: dataroots
        persistentVolumeClaim:
          claimName: tc-data-pv
      imagePullSecrets:
        - name: regcred
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cluster-tool
  namespace: swag-infra
spec:
  template:
    metadata:
      name: cluster-tool
    spec:
      containers:
        - name: cluster-tool
          image: store/softwareag/terracotta-cluster-tool:10.5
          args: ["configure", "-n", "MyCluster", "/configs/tc-config.xml"]
          env:
          - name: ACCEPT_EULA
            value: "Y"
          volumeMounts:
          - name: config-volume
            mountPath: /configs
          - name: license-volume
            mountPath: /licenses
      volumes:
        - name: config-volume
          configMap:
            name: tc-configs
        - name: license-volume
          configMap:
            name: license
      restartPolicy: OnFailure
      imagePullSecrets:
        - name: regcred
---

apiVersion: v1
kind: Service
metadata:
  name: tmc
  namespace: swag-infra
spec:
  ports:
  - name: tmc-port
    port: 9480
  type: LoadBalancer
  selector:
    app: tmc

---

apiVersion: v1
kind: Service
metadata:
  name: tmc-internal
  namespace: swag-infra
  labels:
    app: tmc
spec:
  ports:
  - name: tmc-port
    port: 9480
  clusterIP: None
  selector:
    app: tmc

---


apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tmc
  namespace: swag-infra
spec:
  selector:
    matchLabels:
      app: tmc
  serviceName: tmc-internal
  replicas: 1
  template:
    metadata:
      labels:
        app: tmc
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - image: store/softwareag/tmc:10.5
          name: tmc
          imagePullPolicy: Always
          env:
            - name: ACCEPT_EULA
              value: "Y"
            - name: TMS_DEFAULTURL
              value: "terracotta://terracotta-0.swag-infra:9410"
          ports:
            - containerPort: 9480
          volumeMounts:
            - name: tmcdata
              mountPath: /data/tmc/
      imagePullSecrets:
        - name: regcred
  volumeClaimTemplates:
    - metadata:
        name: tmcdata
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi
