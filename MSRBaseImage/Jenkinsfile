pipeline {
	
	agent {
		kubernetes {
    	label 'docker-builder'
    	defaultContainer 'jnlp'
    	yaml """
kind: Pod
spec:
  serviceAccountName: jenkins-agent-account
  containers:
  - name: jnlp
    workingDir: /tmp/jenkins
  - name: kaniko
    workingDir: /tmp/jenkins
    image: gcr.io/kaniko-project/executor:debug
    imagePullPolicy: Always
    restartPolicy: Never
    command: 
    - /busybox/cat
    tty: true
    volumeMounts:
    - name: jenkins-docker-cfg
      mountPath: /kaniko/.docker
  volumes:
  - name: jenkins-docker-cfg
    projected:
      sources:
      - secret:
          name: docker-credentials 
          items:
            - key: .dockerconfigjson
              path: config.json 
"""
		}
	}

	environment {
		PACKAGE="MSRBaseImage"
		BUILDER_TAG = "10.5"
    CONTAINER_TAG = "10.5"
		REG = "docker-registry.registry:5000"
    }

    stages {
		stage('Build') {
			steps {
				container(name: 'kaniko', shell: '/busybox/sh') {
					sh '''#!/busybox/sh
					/kaniko/executor --context ${PACKAGE} \
						--destination ${REG}/microservice-runtime-tcdb:${CONTAINER_TAG} \
            --destination ${REG}/microservice-runtime-tcdb:${CONTAINER_TAG}.${BUILD_NUMBER} \
            --destination ${REG}/microservice-runtime-tcdb:latest \
						--insecure-registry ${REG} \
						--build-arg BUILDER_IMAGE=${REG}/commandcentral-builder:${BUILDER_TAG} \
						--build-arg BASE_IMAGE=${REG}/java:${BUILDER_TAG}
					'''
				}
			}
		}
    }
}