apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elastic-volume-claim
  namespace: swag-infra
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-path
  volumeMode: Filesystem

---
apiVersion: v1
kind: Service
metadata:
  name: elastic-svc
  namespace: swag-infra
spec:
  ports:
  - name: elastic
    port: 9200
    protocol: TCP
    targetPort: 9200
  selector:
    app: elasticsearch
  sessionAffinity: None
  type: ClusterIP


---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    workload.user.cattle.io/workloadselector: apps.statefulset-swag-infra-elastic
  name: elastic
  namespace: swag-infra
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: apps.statefulset-swag-infra-elastic
  serviceName: elastic-svc
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: elasticsearch
        workload.user.cattle.io/workloadselector: apps.statefulset-swag-infra-elastic
    spec:
      affinity: {}
      containers:
      - env:
        - name: discovery.type
          value: single-node
        - name: ELASTIC_PASSWORD
          value: Elastic_S3cret!
        - name: xpack.security.enabled
          value: "false"
        image: docker.io/library/elasticsearch:8.2.3
        imagePullPolicy: Always
        name: elastic
        ports:
        - containerPort: 9200
          name: elastic
          protocol: TCP
          _serviceType: ClusterIP
          _name: elastic
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: "1"
            memory: 2Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: elastic-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
      terminationGracePeriodSeconds: 30
      volumes:
      - name: elastic-volume
        persistentVolumeClaim:
          claimName: elastic-volume-claim
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate