pipeline {
	
	agent {
		kubernetes {
    	label 'docker-builder'
    	defaultContainer 'jnlp'
    	yaml """
kind: Pod
spec:
  serviceAccountName: jenkins-sa
  containers:
  - name: kaniko
    image: gcr.io/kaniko-project/executor:latest
	imagePullPolicy: Always
	command:
	- sleep
	args:
	- 9999999
	volumeMounts:
    - name: swag-license-keys
      mountPath: /licenses
  volumes:
    - name: swag-license-keys
	  persistentVolumeClaim:
	    claimName: license-pvc
"""
	}


	properties([
  		parameters([
    		string(name: 'EMPOWER_USER', description: 'Your Empower username'),
			string(name: 'EMPOWER_PASSWORD', description: 'Your Empower password'),
			string(name: 'DOCKERHUB_USER', description: 'Your Docker hub username'),
			string(name: 'DOCKERHUB_PASSWORD', description: 'Your Docker hub password'),
  		])
	])

	environment {
		PACKAGE="CCBuilder"
        CC_TAG = "10.7"
		TAG = "10.7"
		EMPOWER_USR = this.params.get(EMPOWER_USER)
		EMPOWER_PSW = this.params.get(EMPOWER_PASSWORD)
		DOCKER_USR = this.params.get(DOCKERHUB_USER)
		DOCKER_PWD = this.params.get(DOCKERHUB_PASSWORD)
    }

    stages {
        
		stage('validate') {
			steps {
				sh 'printenv'
				sh 'mkdir -p /kaniko/.docker'
				sh 'echo "{ \"auths\":{\"https://index.docker.io/v1/\":{\"username\":\"$DOCKER_USR\",\"password\":\"$DOCKER_PWD\"}} }"  > /kaniko/.docker/config.json'
				sh 'cat /kaniko/.docker/config.json'
			}
		}

		stage('Build') {
			steps {
				sh '/kaniko/executor --context ${PACKAGE} \
					--destination ${REG}/commandcentral-builder:${TAG} \
					--build-arg BUILDER_IMAGE=${CC_REG}/commandcentral-builder:${CC_TAG} \
					--build-arg NODE_IMAGE=${CC_REG}/commandcentral-node:${TAG} \
					--build-arg https://sdc.softwareag.com/dataservewebM107/repository \
					--build-arg https://sdc.softwareag.com/updates/prodRepo \
					--build-arg ${EMPOWER_USR} \
        			--build-arg ${EMPOWER_PSW} \
					--build-arg /licenses/licenses.zip'
			}
		}
    }
}
